"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[9263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),i=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=i(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(n),d=r,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||l;return n?o.createElement(h,a(a({ref:t},p),{},{components:n})):o.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var i=2;i<l;i++)a[i]=n[i];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(7294),r=n(6010);const l="tabItem_Ymn6";function a(e){let{children:t,hidden:n,className:a}=e;return o.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,a),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(7462),r=n(7294),l=n(6010),a=n(2389),s=n(7392),c=n(7094),i=n(2466);const p="tabList__CuJ",u="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:a,values:m,groupId:d,className:h}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??f.map((e=>{let{props:{value:t,label:n,attributes:o}}=e;return{value:t,label:n,attributes:o}})),k=(0,s.l)(b,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===a?a:a??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:x}=(0,c.U)(),[g,T]=(0,r.useState)(v),j=[],{blockElementScrollPositionUntilNextRender:w}=(0,i.o5)();if(null!=d){const e=y[d];null!=e&&e!==g&&b.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,n=j.indexOf(t),o=b[n].value;o!==g&&(w(t),T(o),null!=d&&x(d,String(o)))},_=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const n=j.indexOf(e.currentTarget)+1;t=j[n]??j[0];break}case"ArrowLeft":{const n=j.indexOf(e.currentTarget)-1;t=j[n]??j[j.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},h)},b.map((e=>{let{value:t,label:n,attributes:a}=e;return r.createElement("li",(0,o.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>j.push(e),onKeyDown:_,onClick:O},a,{className:(0,l.Z)("tabs__item",u,a?.className,{"tabs__item--active":g===t})}),n??t)}))),t?(0,r.cloneElement)(f.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function d(e){const t=(0,a.Z)();return r.createElement(m,(0,o.Z)({key:String(t)},e))}},4395:(e,t,n)=>{n.r(t),n.d(t,{JsonRpcTerminal:()=>u,assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(7462),r=n(7294),l=n(3905);n(5488),n(5162);const a={id:"json-rpc-txpool",title:"TxPool",description:"List of TxPool JSON RPC commands for NumBlock.",keywords:["docs","json","rpc","commands"]},s=void 0,c={unversionedId:"developers/api/json-rpc-txpool",id:"developers/api/json-rpc-txpool",title:"TxPool",description:"List of TxPool JSON RPC commands for NumBlock.",source:"@site/docs/developers/api/json-rpc-txpool.md",sourceDirName:"developers/api",slug:"/developers/api/json-rpc-txpool",permalink:"/docs/developers/api/json-rpc-txpool",draft:!1,tags:[],version:"current",frontMatter:{id:"json-rpc-txpool",title:"TxPool",description:"List of TxPool JSON RPC commands for NumBlock.",keywords:["docs","json","rpc","commands"]},sidebar:"develop",previous:{title:"Web3",permalink:"/docs/developers/api/json-rpc-web3"},next:{title:"Debug",permalink:"/docs/developers/api/json-rpc-debug"}},i={},p=[{value:"txpool_content",id:"txpool_content",level:2},{value:"txpool_inspect",id:"txpool_inspect",level:2},{value:"txpool_status",id:"txpool_status",level:2}],u=e=>{const[t,n]=(0,r.useState)(""),{method:o,params:a,network:s}=e;return(0,l.kt)("div",null,(0,l.kt)("div",null,""!=t?(0,l.kt)("pre",{className:"json_rpc_terminal"},t):null),(0,l.kt)("div",null,""==t?(0,l.kt)("button",{className:"json_rpc_terminal_button",onClick:()=>{fetch(s,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",method:o,params:a,id:1})}).then((e=>e.json())).then((e=>{n(JSON.stringify(e))}))}},"Run command"):(0,l.kt)("button",{className:"json_rpc_terminal_button",onClick:()=>{n("")}},"Clear Terminal")))},m={toc:p,JsonRpcTerminal:u};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"txpool_content"},"txpool_content"),(0,l.kt)("p",null,"Returns a list with the exact details of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only."),(0,l.kt)("hr",null),(0,l.kt)("h4",null,(0,l.kt)("i",null,"Parameters:")),(0,l.kt)("p",null,"None"),(0,l.kt)("h4",null,(0,l.kt)("i",null,"Example:")),(0,l.kt)("p",null,"Run the command and see live results from our testnet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"txpool_content","params":[],"id":1}\'\n')),(0,l.kt)(u,{method:"txpool_content",params:[],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,l.kt)("h2",{id:"txpool_inspect"},"txpool_inspect"),(0,l.kt)("p",null,"Returns a list with a textual summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only. This is a method specifically tailored to developers to quickly see the transactions in the pool and find any potential issues."),(0,l.kt)("hr",null),(0,l.kt)("h4",null,(0,l.kt)("i",null,"Parameters:")),(0,l.kt)("p",null,"None"),(0,l.kt)("h4",null,(0,l.kt)("i",null,"Example:")),(0,l.kt)("p",null,"Run the command and see live results from our testnet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"txpool_inspect","params":[],"id":1}\'\n')),(0,l.kt)(u,{method:"txpool_inspect",params:[],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,l.kt)("h2",{id:"txpool_status"},"txpool_status"),(0,l.kt)("p",null,"Returns the number of transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only."),(0,l.kt)("hr",null),(0,l.kt)("h4",null,(0,l.kt)("i",null,"Parameters:")),(0,l.kt)("p",null,"None"),(0,l.kt)("h4",null,(0,l.kt)("i",null,"Example:")),(0,l.kt)("p",null,"Run the command and see live results from our testnet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"txpool_status","params":[],"id":1}\'\n')),(0,l.kt)(u,{method:"txpool_status",params:[],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}))}d.isMDXComponent=!0}}]);