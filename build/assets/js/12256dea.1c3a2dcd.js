"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[1503],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=u(n),c=i,k=m["".concat(s,".").concat(c)]||m[c]||p[c]||l;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:i,o[1]=r;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},452:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const l={id:"validator-node",title:"Run a Validator",description:"Hosting requirements for a NumBlock node",keywords:["docs","hosting","cloud","setup","validator"]},o=void 0,r={unversionedId:"validators/validator-node",id:"validators/validator-node",title:"Run a Validator",description:"Hosting requirements for a NumBlock node",source:"@site/docs/validators/validator-node.md",sourceDirName:"validators",slug:"/validators/validator-node",permalink:"/docs/validators/validator-node",draft:!1,tags:[],version:"current",frontMatter:{id:"validator-node",title:"Run a Validator",description:"Hosting requirements for a NumBlock node",keywords:["docs","hosting","cloud","setup","validator"]},sidebar:"develop",previous:{title:"CLI Commands",permalink:"/docs/validators/cli-commands"},next:{title:"Performance Benchmarks",permalink:"/docs/benchmarks"}},s={},u=[{value:"Knowledge base",id:"knowledge-base",level:2},{value:"Minimum system requirements",id:"minimum-system-requirements",level:2},{value:"Service configuration",id:"service-configuration",level:2},{value:"Binary",id:"binary",level:3},{value:"Data storage",id:"data-storage",level:3},{value:"Log files",id:"log-files",level:3},{value:"Additional dependencies",id:"additional-dependencies",level:3},{value:"Maintenance",id:"maintenance",level:2},{value:"Backup",id:"backup",level:3},{value:"Logging",id:"logging",level:3},{value:"OS security patches",id:"os-security-patches",level:3},{value:"Metrics",id:"metrics",level:2},{value:"System metrics",id:"system-metrics",level:3},{value:"Validator metrics",id:"validator-metrics",level:3},{value:"Security",id:"security",level:2},{value:"API services",id:"api-services",level:3},{value:"NumBlock secrets",id:"numblock-secrets",level:3},{value:"Update",id:"update",level:2},{value:"Update procedure",id:"update-procedure",level:3},{value:"Startup procedure",id:"startup-procedure",level:2}],d={toc:u};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Below are the suggestions for properly hosting a validator node in a NumBlock network. Please pay careful attention to all the items listed below to make sure\nthat your validator setup is properly configured to be secure, stable and performant."),(0,i.kt)("h2",{id:"knowledge-base"},"Knowledge base"),(0,i.kt)("p",null,"Before trying to run the validator node, please read through this document thoroughly.",(0,i.kt)("br",{parentName:"p"}),"\n","Additional docs that might be helpful are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/validators/cli-commands"},"CLI commands"))),(0,i.kt)("h2",{id:"minimum-system-requirements"},"Minimum system requirements"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Influenced by"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"CPU"),(0,i.kt)("td",{parentName:"tr",align:null},"2 cores"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"Number of JSON-RPC queries"),(0,i.kt)("li",null,"Size of the blockchain state"),(0,i.kt)("li",null,"Block gas limit"),(0,i.kt)("li",null,"Block time")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"RAM"),(0,i.kt)("td",{parentName:"tr",align:null},"2 GB"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"Number of JSON-RPC queries"),(0,i.kt)("li",null,"Size of the blockchain state"),(0,i.kt)("li",null,"Block gas limit")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Disk"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"10 GB root patition"),(0,i.kt)("li",null,"30 GB root partition with LVM for disk extension"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("ul",null,(0,i.kt)("li",null,"Size of the blockchain state")))))),(0,i.kt)("h2",{id:"service-configuration"},"Service configuration"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"numblock")," binary needs to run as a system service automatically upon established network connectivity and have start / stop / restart\nfunctionalities. We recommend using a service manager like ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd.")," "),(0,i.kt)("p",null,"Example ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd")," system configuration file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[Unit]\nDescription=NumBlock Server\nAfter=network.target\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nRestart=always\nRestartSec=10\nUser=ubuntu\nExecStart=/usr/local/bin/numblock server --config /home/ubuntu/numblock/config.yaml\n\n[Install]\nWantedBy=multi-user.target\n")),(0,i.kt)("h3",{id:"binary"},"Binary"),(0,i.kt)("p",null,"In production workloads ",(0,i.kt)("inlineCode",{parentName:"p"},"numblock")," binary should only be deployed from pre-built GitHub release binaries - not by manually compiling."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"By manually compiling ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," GitHub branch, you may introduce breaking changes to your environment.",(0,i.kt)("br",{parentName:"p"}),"\n","For that reason it is recommended to deploy NumBlock binary exclusively from releases, as it will contain\ninformation about breaking changes and how to overcome them.")),(0,i.kt)("p",null,"Please refer to ","[Installation]"," for a complete overview of installation method."),(0,i.kt)("h3",{id:"data-storage"},"Data storage"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"data/")," folder  containing the entire blockchain state should be mounted on a dedicated disk / volume allowing for\nautomatic disk backups, volume extension and optionally mounting the disk/volume to another instance in case of failure."),(0,i.kt)("h3",{id:"log-files"},"Log files"),(0,i.kt)("p",null,"Log files need to be rotated on a daily basis (with a tool like ",(0,i.kt)("inlineCode",{parentName:"p"},"logrotate"),")."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"If configured without log rotation, log files could use up all the available disk space which could disrupt the validator uptime.")),(0,i.kt)("p",null,"Example ",(0,i.kt)("inlineCode",{parentName:"p"},"logrotate")," configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/home/ubuntu/numblock/logs/node.log\n{\n        rotate 7\n        daily\n        missingok\n        notifempty\n        compress\n        prerotate\n                /usr/bin/systemctl stop numblock.service\n        endscript\n        postrotate\n                /usr/bin/systemctl start numblock.service\n        endscript\n}\n")),(0,i.kt)("p",null,"Refer to the ",(0,i.kt)("a",{parentName:"p",href:"#logging"},"Logging")," section below for recommendations on log storage."),(0,i.kt)("h3",{id:"additional-dependencies"},"Additional dependencies"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"numblock")," is statically compiled, requiring no additional host OS dependencies."),(0,i.kt)("h2",{id:"maintenance"},"Maintenance"),(0,i.kt)("p",null,"Below are the best practices for maintaining a running validator node of a NumBlock network."),(0,i.kt)("h3",{id:"backup"},"Backup"),(0,i.kt)("p",null,"There are two types of backup procedures recommended for NumBlock nodes. "),(0,i.kt)("p",null,"The suggestion is to use both, whenever possible, with the NumBlock backup being an always available option."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Volume backup")),":",(0,i.kt)("br",{parentName:"li"}),"Daily incremental backup of the ",(0,i.kt)("inlineCode",{parentName:"li"},"data/")," volume of the NumBlock node, or of the complete VM if possible.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"NumBlock backup")),":",(0,i.kt)("br",{parentName:"li"}),"Daily CRON job which does regular backups of NumBlock and moves the ",(0,i.kt)("inlineCode",{parentName:"li"},".dat")," files to an offsite location or to a secure cloud object storage is recommended. ")),(0,i.kt)("p",null,"The NumBlock backup should ideally not overlap with the Volume backup described above."),(0,i.kt)("p",null,"Refer to ","[Backup/restore node instance]"," for instructions on how to perform backups of NumBlock."),(0,i.kt)("h3",{id:"logging"},"Logging"),(0,i.kt)("p",null,"The logs outputted by the NumBlock nodes should:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"be sent to an external data store with indexing and searching capabilities"),(0,i.kt)("li",{parentName:"ul"},"have a log retention period of 30 days")),(0,i.kt)("p",null,"If this is your first time setting up a NumBlock validator, we recommend to start the node\nwith the ",(0,i.kt)("inlineCode",{parentName:"p"},"--log-level=DEBUG")," option to be able to quickly debug any issues you might face."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--log-level=DEBUG")," will make the node's log output be as verbose as possible.",(0,i.kt)("br",{parentName:"p"}),"\n","Debug logs will drastically increase the size of the log file which must be taken into account when setting up\nlog rotation solution.")),(0,i.kt)("h3",{id:"os-security-patches"},"OS security patches"),(0,i.kt)("p",null,"Administrators need to ensure that the validator instance OS is always updated with the latest patches at least once every month."),(0,i.kt)("h2",{id:"metrics"},"Metrics"),(0,i.kt)("h3",{id:"system-metrics"},"System metrics"),(0,i.kt)("p",null,"Administrators need to setup some kind of system metrics monitor, (e.g. Telegraf + InfluxDB + Grafana or a 3rd party SaaS)."),(0,i.kt)("p",null,"Metrics that need to be monitored and that need to have alarm notifications setup:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Metric name"),(0,i.kt)("th",{parentName:"tr",align:null},"Alarm threshold"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"CPU usage (%)"),(0,i.kt)("td",{parentName:"tr",align:null},"> 90% for more than 5 minutes")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"RAM utilization (%)"),(0,i.kt)("td",{parentName:"tr",align:null},"> 90% for more than 5 minutes")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Root disk utilization"),(0,i.kt)("td",{parentName:"tr",align:null},"> 90%")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Data disk utilization"),(0,i.kt)("td",{parentName:"tr",align:null},"> 90%")))),(0,i.kt)("h3",{id:"validator-metrics"},"Validator metrics"),(0,i.kt)("p",null,"Administrators need to setup collection of metrics from NumBlock's Prometheus API to be able to\nmonitor the blockchain performance."),(0,i.kt)("p",null,"Refer to ","[Prometheus metrics]"," to understand which metrics are being exposed and how to set up Prometheus metric collection."),(0,i.kt)("p",null,"Extra attention needs to be paid to the following metrics:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Block production time"))," - if block production time is higher than normal, there is a potential problem with the network"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Number of consensus rounds"))," - if there is more than 1 round, there is a potential problem with the validator set in the network"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Number of peers"))," - if the number of peers drop, there is a connectivity issue in the network")),(0,i.kt)("h2",{id:"security"},"Security"),(0,i.kt)("p",null,"Below are the best practices for securing a running validator node of a NumBlock network."),(0,i.kt)("h3",{id:"api-services"},"API services"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"JSON-RPC"))," -\nOnly API service that needs to be exposed to the public ( via load balancer or directly ).",(0,i.kt)("br",{parentName:"li"}),"This API should run on all interfaces or on a specific IP address ( example: ",(0,i.kt)("inlineCode",{parentName:"li"},"--json-rpc 0.0.0.0:8545")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--json-prc 192.168.1.1:8545"),"  ).",(0,i.kt)("admonition",{parentName:"li",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"As this is publicly facing API it is recommended to have a load balancer / reverse proxy in front of it to provide security and rate limiting.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"LibP2P"))," -\nThis is the networking API used by nodes for peer communication. It needs to run on all interfaces or on a specific ip address\n( ",(0,i.kt)("inlineCode",{parentName:"li"},"--libp2p 0.0.0.0:1478")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--libp2p 192.168.1.1:1478")," ). This API should not be publicly exposed,\nbut it should be reachable from all other nodes. ",(0,i.kt)("admonition",{parentName:"li",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If ran on localhost ( ",(0,i.kt)("inlineCode",{parentName:"p"},"--libp2p 127.0.0.1:1478")," ) other nodes will not be able to connect.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"GRPC"))," -\nThis API is used only for running operator commands and noting else. As such it should run exclusively on localhost ( ",(0,i.kt)("inlineCode",{parentName:"li"},"--grpc-address 127.0.0.1:9632")," ).")),(0,i.kt)("h3",{id:"numblock-secrets"},"NumBlock secrets"),(0,i.kt)("p",null,"NumBlock secrets ( ",(0,i.kt)("inlineCode",{parentName:"p"},"ibft")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"libp2p")," keys ) should not be stored on a local file system.",(0,i.kt)("br",{parentName:"p"}),"\n","Instead, a supported ","[Secret Manager]"," should be used.",(0,i.kt)("br",{parentName:"p"}),"\n","Storing secrets to local file system should only be used in non-production environments."),(0,i.kt)("h2",{id:"update"},"Update"),(0,i.kt)("p",null,"Following is the desired update procedure for validator nodes, described as step-by-step instructions."),(0,i.kt)("h3",{id:"update-procedure"},"Update procedure"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Download the latest NumBlock binary from the official GitHub ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/numblock/releases"},"releases")),(0,i.kt)("li",{parentName:"ul"},"Stop the NumBlock service ( example: ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo systemctl stop numblock.service")," )"),(0,i.kt)("li",{parentName:"ul"},"Replace the existing ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," binary with the downloaded one ( example: ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo mv numblock /usr/local/bin/")," )"),(0,i.kt)("li",{parentName:"ul"},"Check if correct ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," version is in place by running ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock version")," - it should correspond to the release version "),(0,i.kt)("li",{parentName:"ul"},"Check the release documentation if there are any backwards compatibility steps needed to be done before starting ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," service"),(0,i.kt)("li",{parentName:"ul"},"Start ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," service ( example: ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo systemctl start numblock.service")," )"),(0,i.kt)("li",{parentName:"ul"},"Finally, check the ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," log output and make sure everything is running without any ",(0,i.kt)("inlineCode",{parentName:"li"},"[ERROR]")," logs")),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"When there is a breaking release, this update procedure must be performed on all nodes as\nthe currently running binary is not compatible with the new release.  "),(0,i.kt)("p",{parentName:"admonition"},"This means that the chain must be halted for a short period of time ( until ",(0,i.kt)("inlineCode",{parentName:"p"},"numblock")," binaries are replaced and service restarted )\nso plan accordingly.   "),(0,i.kt)("p",{parentName:"admonition"},"You can use tools like ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://www.ansible.com/"},"Ansible"))," or some custom script to perform the update efficiently\nand minimize chain downtime.")),(0,i.kt)("h2",{id:"startup-procedure"},"Startup procedure"),(0,i.kt)("p",null,"Following is the desired flow of the startup procedure for NumBlock validator"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Read through the docs listed in ",(0,i.kt)("a",{parentName:"li",href:"#knowledge-base"},"Knowlege Base")," section"),(0,i.kt)("li",{parentName:"ul"},"Apply the latest OS patches on the validator node"),(0,i.kt)("li",{parentName:"ul"},"Download the latest ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," binary from the official GitHub ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/numblock/releases"},"releases")," and place it in local instance ",(0,i.kt)("inlineCode",{parentName:"li"},"PATH")),(0,i.kt)("li",{parentName:"ul"},"Initialize one of the supported ","[secrets managers]"," using ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock secrets generate")," CLI command"),(0,i.kt)("li",{parentName:"ul"},"Generate and store secrets using ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock secrets init")," ",(0,i.kt)("a",{parentName:"li",href:"/docs/validators/cli-commands#secrets-init-flags"},"CLI command")),(0,i.kt)("li",{parentName:"ul"},"Take note of ",(0,i.kt)("inlineCode",{parentName:"li"},"NodeID")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Public key (address)")," values"),(0,i.kt)("li",{parentName:"ul"},"Generate ",(0,i.kt)("inlineCode",{parentName:"li"},"genesis.json")," file as described in ","[cloud setup]"," using ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock genesis")," ",(0,i.kt)("a",{parentName:"li",href:"docs/validators/cli-commands#genesis-flags"},"CLI command")),(0,i.kt)("li",{parentName:"ul"},"Generate default config file using ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock server export")," ","[CLI command]"),(0,i.kt)("li",{parentName:"ul"},"Edit ",(0,i.kt)("inlineCode",{parentName:"li"},"default-config.yaml")," file to accommodate local validator node environment ( file paths, etc. )"),(0,i.kt)("li",{parentName:"ul"},"Create a NumBlock service ( ",(0,i.kt)("inlineCode",{parentName:"li"},"systemd")," or similar ) where ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," binary will run the server from a ",(0,i.kt)("inlineCode",{parentName:"li"},"default-config.yaml")," file"),(0,i.kt)("li",{parentName:"ul"},"Start NumBlock server by starting the service ( example: ",(0,i.kt)("inlineCode",{parentName:"li"},"systemctl start numblock")," )"),(0,i.kt)("li",{parentName:"ul"},"Check the ",(0,i.kt)("inlineCode",{parentName:"li"},"numblock")," log output and make sure the blocks are being generated and that there are no ",(0,i.kt)("inlineCode",{parentName:"li"},"[ERROR]")," logs"),(0,i.kt)("li",{parentName:"ul"},"Check the chain functionality by calling a JSON-RPC method like ","[",(0,i.kt)("inlineCode",{parentName:"li"},"eth_chainId"),"]")))}m.isMDXComponent=!0}}]);