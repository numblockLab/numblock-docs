"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[9100],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=l,k=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(k,a(a({ref:t},c),{},{components:n})):r.createElement(k,a({ref:t},c))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:l,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294),l=n(6010);const o="tabItem_Ymn6";function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,l.Z)(o,a),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(7462),l=n(7294),o=n(6010),a=n(2389),s=n(7392),i=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:a,values:m,groupId:d,className:k}=e,f=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),b=(0,s.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===a?a:a??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==v&&!h.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:g}=(0,i.U)(),[N,j]=(0,l.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.o5)();if(null!=d){const e=y[d];null!=e&&e!==N&&h.some((t=>t.value===e))&&j(e)}const O=e=>{const t=e.currentTarget,n=T.indexOf(t),r=h[n].value;r!==N&&(w(t),j(r),null!=d&&g(d,String(r)))},_=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},k)},h.map((e=>{let{value:t,label:n,attributes:a}=e;return l.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:_,onClick:O},a,{className:(0,o.Z)("tabs__item",p,a?.className,{"tabs__item--active":N===t})}),n??t)}))),t?(0,l.cloneElement)(f.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,a.Z)();return l.createElement(m,(0,r.Z)({key:String(t)},e))}},8005:(e,t,n)=>{n.r(t),n.d(t,{JsonRpcTerminal:()=>p,assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),l=n(7294),o=n(3905);n(5488),n(5162);const a={id:"json-rpc-net",title:"Net",description:"List of Net JSON RPC commands for NumBlock.",keywords:["docs","polygon","rpc","commands"]},s=void 0,i={unversionedId:"developers/api/json-rpc-net",id:"developers/api/json-rpc-net",title:"Net",description:"List of Net JSON RPC commands for NumBlock.",source:"@site/docs/developers/api/json-rpc-net.md",sourceDirName:"developers/api",slug:"/developers/api/json-rpc-net",permalink:"/docs/developers/api/json-rpc-net",draft:!1,tags:[],version:"current",frontMatter:{id:"json-rpc-net",title:"Net",description:"List of Net JSON RPC commands for NumBlock.",keywords:["docs","polygon","rpc","commands"]},sidebar:"develop",previous:{title:"Ethereum",permalink:"/docs/developers/api/json-rpc-eth"},next:{title:"Web3",permalink:"/docs/developers/api/json-rpc-web3"}},u={},c=[{value:"net_version",id:"net_version",level:2},{value:"net_listening",id:"net_listening",level:2},{value:"net_peerCount",id:"net_peercount",level:2}],p=e=>{const[t,n]=(0,l.useState)(""),{method:r,params:a,network:s}=e;return(0,o.kt)("div",null,(0,o.kt)("div",null,""!=t?(0,o.kt)("pre",{className:"json_rpc_terminal"},t):null),(0,o.kt)("div",null,""==t?(0,o.kt)("button",{className:"json_rpc_terminal_button",onClick:()=>{fetch(s,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",method:r,params:a,id:1})}).then((e=>e.json())).then((e=>{n(JSON.stringify(e))}))}},"Run command"):(0,o.kt)("button",{className:"json_rpc_terminal_button",onClick:()=>{n("")}},"Clear Terminal")))},m={toc:c,JsonRpcTerminal:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"net_version"},"net_version"),(0,o.kt)("p",null,"Returns the current network id."),(0,o.kt)("hr",null),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Parameters:")),(0,o.kt)("p",null,"None"),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Returns:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("b",null," String ")," - The current network id.")),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Example:")),(0,o.kt)("p",null,"Run the command and see live results from our testnet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"net_version","params":[],"id":83}\'\n')),(0,o.kt)(p,{method:"net_version",params:[],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,o.kt)("h2",{id:"net_listening"},"net_listening"),(0,o.kt)("p",null,"Returns true if a client is actively listening for network connections."),(0,o.kt)("hr",null),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Parameters:")),(0,o.kt)("p",null,"None"),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Returns:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("b",null," Boolean ")," - true when listening, otherwise false.")),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Example:")),(0,o.kt)("p",null,"Run the command and see live results from our testnet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"net_listening","params":[],"id":83}\'\n')),(0,o.kt)(p,{method:"net_listening",params:[],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,o.kt)("h2",{id:"net_peercount"},"net_peerCount"),(0,o.kt)("p",null,"Returns number of peers currently connected to the client."),(0,o.kt)("hr",null),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Parameters:")),(0,o.kt)("p",null,"None"),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Returns:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("b",null," QUANTITY ")," - integer of the number of connected peers.")),(0,o.kt)("h4",null,(0,o.kt)("i",null,"Example:")),(0,o.kt)("p",null,"Run the command and see live results from our testnet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":1}\'\n')),(0,o.kt)(p,{method:"net_peerCount",params:[],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}))}d.isMDXComponent=!0}}]);