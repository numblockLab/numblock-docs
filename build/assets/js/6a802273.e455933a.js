"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[4751],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(f,l(l({ref:t},s),{},{components:n})):o.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9156:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={description:"In the following tutorial we will go through a step-by-step guide on how to deploy a Basic Contract to NumBlock",keywords:["deploy dapp","full stack app","tutorial","web3","dapp development"]},l="Deploying a Basic Contract",i={unversionedId:"developers/building/first-contract",id:"developers/building/first-contract",title:"Deploying a Basic Contract",description:"In the following tutorial we will go through a step-by-step guide on how to deploy a Basic Contract to NumBlock",source:"@site/docs/developers/building/first-contract.md",sourceDirName:"developers/building",slug:"/developers/building/first-contract",permalink:"/docs/developers/building/first-contract",draft:!1,tags:[],version:"current",frontMatter:{description:"In the following tutorial we will go through a step-by-step guide on how to deploy a Basic Contract to NumBlock",keywords:["deploy dapp","full stack app","tutorial","web3","dapp development"]},sidebar:"develop",previous:{title:"Building DApps",permalink:"/docs/category/building-dapps"},next:{title:"Launching an NRC-20 Token",permalink:"/docs/developers/building/token"}},p={},c=[{value:"Tutorials",id:"tutorials",level:2},{value:"Hardhat Deployment",id:"hardhat-deployment",level:3},{value:"Truffle Deployment",id:"truffle-deployment",level:3}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploying-a-basic-contract"},"Deploying a Basic Contract"),(0,r.kt)("p",null,"NumBlock is an EVM based chain, meaning deployment steps are the same as deployment to NumBlock or other chains. Check the ",(0,r.kt)("a",{parentName:"p",href:"/docs/category/networks"},"network specifications"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"You will also need a ",(0,r.kt)("a",{parentName:"p",href:"/docs/foundational-topics/networks/explorers/faucet"},"small amount of NUMB")," to deploy a contract, and for any contract functions.\nFor testing purposes, it is recommended to first deploy to ",(0,r.kt)("a",{parentName:"p",href:"https://testnet.numblock.org/"},"NumBlock Testnet"),". After functionality is tested and confirmed, deploy to NumBlock mainnet.")),(0,r.kt)("h2",{id:"tutorials"},"Tutorials"),(0,r.kt)("p",null,"In general you can choose almost any development environment you wish as they all have their own benefits. A few of the most used environments are shown below. Using the ",(0,r.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/tutorials/hello-world-smart-contract/"},"official ethereum documentation"),", you can change the network to NumBlock and deploy a hello world contract."),(0,r.kt)("h3",{id:"hardhat-deployment"},"Hardhat Deployment"),(0,r.kt)("p",null,"Following the ",(0,r.kt)("a",{parentName:"p",href:"https://hardhat.org/hardhat-runner/docs/guides/project-setup"},"Official Hardhat documentation"),", also how to ",(0,r.kt)("a",{parentName:"p",href:"/docs/developers/smart-contracts/deploying/hardhat"},"configure Hardhat to NumBlock"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For NumBlock network Config, you have to export an object from ",(0,r.kt)("inlineCode",{parentName:"p"},"hardhat.config.js"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"networks")," config field an optional object where network names map to their configuration.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"There are two kinds of networks in Hardhat: ",(0,r.kt)("a",{parentName:"p",href:"https://eth.wiki/json-rpc/API"},"JSON-RPC")," based networks, and the built-in Hardhat Network.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can customize which network is used by default when running Hardhat by setting the config's ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultNetwork")," field. If you omit this config, its default value is ",(0,r.kt)("inlineCode",{parentName:"p"},'"hardhat"'),"."))),(0,r.kt)("h3",{id:"truffle-deployment"},"Truffle Deployment"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://kauri.io/#collections/POA%20Tutorial%20series/poa-part-1-develop-and-deploy-a-smart-contract/"},"This Tutorial on Kauri")," shows how to deploy a DApp to the test network. It can be adapted to the NumBlock network with a few minor tweaks."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"For NumBlock, edit the truffle.js file to the following:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'require(\'dotenv\').config();\nconst HDWalletProvider = require(\'truffle-hdwallet-provider\');\n\nmodule.exports = {\n// See <http://truffleframework.com/docs/advanced/configuration>\n// for more about customizing your Truffle configuration!\n    networks: {\n        numblock: {\n            provider: function() {\n                    return new HDWalletProvider(\n                process.env.MNEMONIC,\n                "https://rpc-testnet.numblock.org")\n            },\n            network_id: 100,\n            gas: 500000,\n            gasPrice: 1000000000\n        },\n        development: {\n            host: "127.0.0.1",\n            port: 8545,\n            network_id: "*" // Match any network id\n        }\n    }\n};\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Run the Truffle deployment to NumBlock.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"truffle migrate --network numblock\n")))}u.isMDXComponent=!0}}]);