"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[8095],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var f=n.createContext({}),i=function(e){var t=n.useContext(f),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(f.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,f=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=i(r),m=l,y=c["".concat(f,".").concat(m)]||c[m]||p[m]||o;return r?n.createElement(y,a(a({ref:t},s),{},{components:r})):n.createElement(y,a({ref:t},s))}));function y(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,a=new Array(o);a[0]=m;var u={};for(var f in t)hasOwnProperty.call(t,f)&&(u[f]=t[f]);u.originalType=e,u[c]="string"==typeof e?e:l,a[1]=u;for(var i=2;i<o;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>a,default:()=>y,frontMatter:()=>o,metadata:()=>u,toc:()=>i});var n=r(7462),l=(r(7294),r(3905));const o={title:"Using Truffle",description:"This truffle plugin allows you to automatically verify your smart contracts' source code on NumBlock, straight from the Truffle CLI.",keywords:["truffle verify","verify contracts","plugin","truffle plugin"]},a="Truffle Verify",u={unversionedId:"developers/smart-contracts/verify/truffle",id:"developers/smart-contracts/verify/truffle",title:"Using Truffle",description:"This truffle plugin allows you to automatically verify your smart contracts' source code on NumBlock, straight from the Truffle CLI.",source:"@site/docs/developers/smart-contracts/verify/truffle.md",sourceDirName:"developers/smart-contracts/verify",slug:"/developers/smart-contracts/verify/truffle",permalink:"/docs/developers/smart-contracts/verify/truffle",draft:!1,tags:[],version:"current",frontMatter:{title:"Using Truffle",description:"This truffle plugin allows you to automatically verify your smart contracts' source code on NumBlock, straight from the Truffle CLI.",keywords:["truffle verify","verify contracts","plugin","truffle plugin"]}},f={},i=[{value:"Installation",id:"installation",level:2},{value:"Useful links",id:"useful-links",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)},c=s("Tabs"),p=s("TabItem"),m={toc:i};function y(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"truffle-verify"},"Truffle Verify"),(0,l.kt)("p",null,"This ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/truffle-plugin-verify"},"truffle plugin")," allows you to automatically verify your smart contracts' source code on NumBlock (by Etherscan), straight from the Truffle CLI."),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,"Install the plugin with npm or yarn"),(0,l.kt)(c,{groupId:"package-manager",mdxType:"Tabs"},(0,l.kt)(p,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add -D truffle-plugin-verify\n"))),(0,l.kt)(p,{value:"npm",label:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -D truffle-plugin-verify\n")))),(0,l.kt)("p",null,"Add the plugin to your truffle-config.js file"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  /* ... rest of truffle-config */\n\n  plugins: ['truffle-plugin-verify']\n}\n")),(0,l.kt)("p",null,"Generate an API Key on your ","[NumBlock account]","."),(0,l.kt)("p",null,"Add your NumBlock API key to your truffle config (make sure to use something like dotenv so you don't commit the api key)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  /* ... rest of truffle-config */\n\n  api_keys: {\n    NumBlock: 'MY_API_KEY'\n  }\n}\n")),(0,l.kt)("h2",{id:"useful-links"},"Useful links"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://kalis.me/verify-truffle-smart-contracts-etherscan/"},"Automatically verify Truffle smart contracts on Etherscan")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://trufflesuite.com/docs/truffle/quickstart/"},"Truffle Quickstart"))))}y.isMDXComponent=!0}}]);