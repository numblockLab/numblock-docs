"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[630],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||c;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<c;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7183:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const c={id:"protocol",title:"Interconnect"},a=void 0,s={unversionedId:"architecture/modules/protocol",id:"architecture/modules/protocol",title:"Interconnect",description:"Overview",source:"@site/docs/architecture/modules/protocol.md",sourceDirName:"architecture/modules",slug:"/architecture/modules/protocol",permalink:"/docs/architecture/modules/protocol",draft:!1,tags:[],version:"current",frontMatter:{id:"protocol",title:"Interconnect"},sidebar:"develop",previous:{title:"Consensus Engine",permalink:"/docs/architecture/modules/consensus"},next:{title:"Storage",permalink:"/docs/architecture/modules/storage"}},i={},l=[{value:"Overview",id:"overview",level:2},{value:"GRPC for Other Nodes",id:"grpc-for-other-nodes",level:2},{value:"Status Object",id:"status-object",level:3}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Interconnect")," module contains the logic for the synchronization protocol."),(0,o.kt)("p",null,"The NumBlock uses ",(0,o.kt)("strong",{parentName:"p"},"libp2p")," as the P2P network layer, and on top of that runs ",(0,o.kt)("strong",{parentName:"p"},"gRPC"),"."),(0,o.kt)("h2",{id:"grpc-for-other-nodes"},"GRPC for Other Nodes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="protocol/proto/v1.proto"',title:'"protocol/proto/v1.proto"'},"service V1 {\n    // Returns status information regarding the specific point in time\n    rpc GetCurrent(google.protobuf.Empty) returns (V1Status);\n    \n    // Returns any type of object (Header, Body, Receipts...)\n    rpc GetObjectsByHash(HashRequest) returns (Response);\n    \n    // Returns a range of headers\n    rpc GetHeaders(GetHeadersRequest) returns (Response);\n    \n    // Watches what new blocks get included\n    rpc Watch(google.protobuf.Empty) returns (stream V1Status);\n}\n")),(0,o.kt)("h3",{id:"status-object"},"Status Object"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="protocol/proto/v1.proto"',title:'"protocol/proto/v1.proto"'},"message V1Status {\n    string difficulty = 1;\n    string hash = 2;\n    int64 number = 3;\n}\n")))}u.isMDXComponent=!0}}]);