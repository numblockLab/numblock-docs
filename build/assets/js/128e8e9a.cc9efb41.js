"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[2104],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7719:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"NRC-20 Token Standard",lang:"en"},l=void 0,i={unversionedId:"developers/token-standards/nrc-20",id:"developers/token-standards/nrc-20",title:"NRC-20 Token Standard",description:"Introduction",source:"@site/docs/developers/token-standards/nrc-20.md",sourceDirName:"developers/token-standards",slug:"/developers/token-standards/nrc-20",permalink:"/docs/developers/token-standards/nrc-20",draft:!1,tags:[],version:"current",frontMatter:{title:"NRC-20 Token Standard",lang:"en"},sidebar:"develop",previous:{title:"Token Standards",permalink:"/docs/developers/token-standards/"},next:{title:"NRC-721 Non-Fungible Token Standard",permalink:"/docs/developers/token-standards/nrc-721"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Body",id:"body",level:2},{value:"Methods",id:"methods",level:4},{value:"Events",id:"events",level:4},{value:"Examples",id:"web3py-example",level:3},{value:"Web3.py Example",id:"web3py-example",level:4},{value:"Further reading",id:"further-reading",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"What is a Token?")),(0,r.kt)("p",null,"Tokens can represent virtually anything in NumBlock:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"reputation points in an online platform"),(0,r.kt)("li",{parentName:"ul"},"skills of a character in a game"),(0,r.kt)("li",{parentName:"ul"},"lottery tickets"),(0,r.kt)("li",{parentName:"ul"},"financial assets like a share in a company"),(0,r.kt)("li",{parentName:"ul"},"a fiat currency like USD"),(0,r.kt)("li",{parentName:"ul"},"an ounce of gold"),(0,r.kt)("li",{parentName:"ul"},"and more...")),(0,r.kt)("p",null,"Such a powerful feature of NumBlock must be handled by a robust standard, right? That's exactly\nwhere the NRC-20 plays its role! This standard allows developers to build token applications that are interoperable with other products and services."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"What is NRC-20?")),(0,r.kt)("p",null,"The NRC-20 introduces a standard for Fungible Tokens, in other words, they have a property that makes each Token be exactly\nthe same (in type and value) as another Token. For example, an NRC-20 Token acts just like the NUMB, meaning that 1 Token\nis and will always be equal to all the other Tokens."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/foundational-topics/account"},"Accounts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/developers/smart-contracts/"},"Smart Contracts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/developers/token-standards//"},"Token standards"))),(0,r.kt)("h2",{id:"body"},"Body"),(0,r.kt)("p",null,"The NRC-20 (NumBlock Request for Comments 20), proposed by Fabian Vogelsteller in November 2015, is a Token Standard that\nimplements an API for tokens within Smart Contracts."),(0,r.kt)("p",null,"Example functionalities NRC-20 provides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"transfer tokens from one account to another"),(0,r.kt)("li",{parentName:"ul"},"get the current token balance of an account"),(0,r.kt)("li",{parentName:"ul"},"get the total supply of the token available on the network"),(0,r.kt)("li",{parentName:"ul"},"approve whether an amount of token from an account can be spent by a third-party account")),(0,r.kt)("p",null,"If a Smart Contract implements the following methods and events it can be called an NRC-20 Token Contract and, once deployed, it\nwill be responsible to keep track of the created tokens on NumBlock."),(0,r.kt)("h4",{id:"methods"},"Methods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() public view returns (string)\nfunction symbol() public view returns (string)\nfunction decimals() public view returns (uint8)\nfunction totalSupply() public view returns (uint256)\nfunction balanceOf(address _owner) public view returns (uint256 balance)\nfunction transfer(address _to, uint256 _value) public returns (bool success)\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success)\nfunction approve(address _spender, uint256 _value) public returns (bool success)\nfunction allowance(address _owner, address _spender) public view returns (uint256 remaining)\n")),(0,r.kt)("h4",{id:"events"},"Events"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event Transfer(address indexed _from, address indexed _to, uint256 _value)\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value)\n")),(0,r.kt)("h3",{id:"web3py-example"},"Examples"),(0,r.kt)("p",null,"Let's see how a Standard is so important to make things simple for us to inspect any NRC-20 Token Contract on NumBlock.\nWe just need the Contract Application Binary Interface (ABI) to create an interface to any NRC-20 Token. As you can\nsee below we will use a simplified ABI, to make it a low friction example."),(0,r.kt)("h4",{id:"web3py-example"},"Web3.py Example"),(0,r.kt)("p",null,"First, make sure you have installed ",(0,r.kt)("a",{parentName:"p",href:"https://web3py.readthedocs.io/en/stable/quickstart.html#installation"},"Web3.py")," Python library:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ pip install web3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from web3 import Web3\n\n\nw3 = Web3(Web3.HTTPProvider(\"https://cloudflare-eth.com\"))\n\ndai_token_addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"     # DAI\nweth_token_addr = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"    # Wrapped ether (WETH)\n\nacc_address = \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\"        # Uniswap V2: DAI 2\n\n# This is a simplified Contract Application Binary Interface (ABI) of an NRC-20 Token Contract.\n# It will expose only the methods: balanceOf(address), decimals(), symbol() and totalSupply()\nsimplified_abi = [\n    {\n        'inputs': [{'internalType': 'address', 'name': 'account', 'type': 'address'}],\n        'name': 'balanceOf',\n        'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [],\n        'name': 'decimals',\n        'outputs': [{'internalType': 'uint8', 'name': '', 'type': 'uint8'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [],\n        'name': 'symbol',\n        'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [],\n        'name': 'totalSupply',\n        'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    }\n]\n\ndai_contract = w3.eth.contract(address=w3.toChecksumAddress(dai_token_addr), abi=simplified_abi)\nsymbol = dai_contract.functions.symbol().call()\ndecimals = dai_contract.functions.decimals().call()\ntotalSupply = dai_contract.functions.totalSupply().call() / 10**decimals\naddr_balance = dai_contract.functions.balanceOf(acc_address).call() / 10**decimals\n\n#  DAI\nprint(\"===== %s =====\" % symbol)\nprint(\"Total Supply:\", totalSupply)\nprint(\"Addr Balance:\", addr_balance)\n\nweth_contract = w3.eth.contract(address=w3.toChecksumAddress(weth_token_addr), abi=simplified_abi)\nsymbol = weth_contract.functions.symbol().call()\ndecimals = weth_contract.functions.decimals().call()\ntotalSupply = weth_contract.functions.totalSupply().call() / 10**decimals\naddr_balance = weth_contract.functions.balanceOf(acc_address).call() / 10**decimals\n\n#  WETH\nprint(\"===== %s =====\" % symbol)\nprint(\"Total Supply:\", totalSupply)\nprint(\"Addr Balance:\", addr_balance)\n")),(0,r.kt)("h2",{id:"further-reading"},"Further reading"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/3.x/tokens#ERC20"},"OpenZeppelin - Tokens")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol"},"OpenZeppelin - NRC-20 Implementation"))))}d.isMDXComponent=!0}}]);