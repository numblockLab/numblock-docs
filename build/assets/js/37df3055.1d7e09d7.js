"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[9938],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,k=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(k,s(s({ref:t},p),{},{components:n})):a.createElement(k,s({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var d=2;d<o;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={title:"NRC-721 Non-Fungible Token Standard",lang:"en"},s=void 0,i={unversionedId:"developers/token-standards/nrc-721",id:"developers/token-standards/nrc-721",title:"NRC-721 Non-Fungible Token Standard",description:"Introduction",source:"@site/docs/developers/token-standards/nrc-721.md",sourceDirName:"developers/token-standards",slug:"/developers/token-standards/nrc-721",permalink:"/docs/developers/token-standards/nrc-721",draft:!1,tags:[],version:"current",frontMatter:{title:"NRC-721 Non-Fungible Token Standard",lang:"en"},sidebar:"develop",previous:{title:"NRC-20 Token Standard",permalink:"/docs/developers/token-standards/nrc-20"},next:{title:"NRC-777 Token Standard",permalink:"/docs/developers/token-standards/nrc-777"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Body",id:"body",level:2},{value:"Methods",id:"methods",level:4},{value:"Events",id:"events",level:4},{value:"Examples",id:"web3py-example",level:3},{value:"Web3.py Example",id:"web3py-example",level:4},{value:"Popular NFTs",id:"popular-nfts",level:2},{value:"Further reading",id:"further-reading",level:2}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"What is a Non-Fungible Token?")),(0,r.kt)("p",null,"A Non-Fungible Token (NFT) is used to identify something or someone in a unique way. This type of Token is perfect to\nbe used on platforms that offer collectible items, access keys, lottery tickets, numbered seats for concerts and\nsports matches, etc. This special type of Token has amazing possibilities so it deserves a proper Standard, the NRC-721\ncame to solve that!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"What is NRC-721?")),(0,r.kt)("p",null,"The NRC-721 introduces a standard for NFT, in other words, this type of Token is unique and can have different value\nthan another Token from the same Smart Contract, maybe due to its age, rarity or even something else like its visual.\nWait, visual?"),(0,r.kt)("p",null,"Yes! All NFTs have a ",(0,r.kt)("inlineCode",{parentName:"p"},"uint256")," variable called ",(0,r.kt)("inlineCode",{parentName:"p"},"tokenId"),", so for any NRC-721 Contract, the pair\n",(0,r.kt)("inlineCode",{parentName:"p"},"contract address, uint256 tokenId"),' must be globally unique. That said, a dapp can have a "converter" that\nuses the ',(0,r.kt)("inlineCode",{parentName:"p"},"tokenId")," as input and outputs an image of something cool, like zombies, weapons, skills or amazing kitties!"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/foundational-topics/account"},"Accounts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/developers/smart-contracts/"},"Smart Contracts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/developers/token-standards//"},"Token standards"))),(0,r.kt)("h2",{id:"body"},"Body"),(0,r.kt)("p",null,"The NRC-721 (NumBlock Request for Comments 721), proposed by William Entriken, Dieter Shirley, Jacob Evans,\nNastassia Sachs in January 2018, is a Non-Fungible Token Standard that implements an API for tokens within Smart Contracts."),(0,r.kt)("p",null,"It provides functionalities like to transfer tokens from one account to another, to get the current token balance of an\naccount, to get the owner of a specific token and also the total supply of the token available on the network.\nBesides these it also has some other functionalities like to approve that an amount of token from an account can be\nmoved by a third party account."),(0,r.kt)("p",null,"If a Smart Contract implements the following methods and events it can be called an NRC-721 Non-Fungible Token Contract\nand, once deployed, it will be responsible to keep track of the created tokens on NumBlock."),(0,r.kt)("h4",{id:"methods"},"Methods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"    function balanceOf(address _owner) external view returns (uint256);\n    function ownerOf(uint256 _tokenId) external view returns (address);\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n    function approve(address _approved, uint256 _tokenId) external payable;\n    function setApprovalForAll(address _operator, bool _approved) external;\n    function getApproved(uint256 _tokenId) external view returns (address);\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n")),(0,r.kt)("h4",{id:"events"},"Events"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n")),(0,r.kt)("h3",{id:"web3py-example"},"Examples"),(0,r.kt)("p",null,"Let's see how a Standard is so important to make things simple for us to inspect any NRC-721 Token Contract on NumBlock.\nWe just need the Contract Application Binary Interface (ABI) to create an interface to any NRC-721 Token. As you can\nsee below we will use a simplified ABI, to make it a low friction example."),(0,r.kt)("h4",{id:"web3py-example"},"Web3.py Example"),(0,r.kt)("p",null,"First, make sure you have installed ",(0,r.kt)("a",{parentName:"p",href:"https://web3py.readthedocs.io/en/stable/quickstart.html#installation"},"Web3.py")," Python library:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ pip install web3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from web3 import Web3\nfrom web3._utils.events import get_event_data\n\n\nw3 = Web3(Web3.HTTPProvider(\"https://cloudflare-eth.com\"))\n\nck_token_addr = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\"    # CryptoKitties Contract\n\nacc_address = \"0xb1690C08E213a35Ed9bAb7B318DE14420FB57d8C\"      # CryptoKitties Sales Auction\n\n# This is a simplified Contract Application Binary Interface (ABI) of an NRC-721 NFT Contract.\n# It will expose only the methods: balanceOf(address), name(), ownerOf(tokenId), symbol(), totalSupply()\nsimplified_abi = [\n    {\n        'inputs': [{'internalType': 'address', 'name': 'owner', 'type': 'address'}],\n        'name': 'balanceOf',\n        'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],\n        'payable': False, 'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [],\n        'name': 'name',\n        'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [{'internalType': 'uint256', 'name': 'tokenId', 'type': 'uint256'}],\n        'name': 'ownerOf',\n        'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}],\n        'payable': False, 'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [],\n        'name': 'symbol',\n        'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [],\n        'name': 'totalSupply',\n        'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],\n        'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n]\n\nck_extra_abi = [\n    {\n        'inputs': [],\n        'name': 'pregnantKitties',\n        'outputs': [{'name': '', 'type': 'uint256'}],\n        'payable': False, 'stateMutability': 'view', 'type': 'function', 'constant': True\n    },\n    {\n        'inputs': [{'name': '_kittyId', 'type': 'uint256'}],\n        'name': 'isPregnant',\n        'outputs': [{'name': '', 'type': 'bool'}],\n        'payable': False, 'stateMutability': 'view', 'type': 'function', 'constant': True\n    }\n]\n\nck_contract = w3.eth.contract(address=w3.toChecksumAddress(ck_token_addr), abi=simplified_abi+ck_extra_abi)\nname = ck_contract.functions.name().call()\nsymbol = ck_contract.functions.symbol().call()\nkitties_auctions = ck_contract.functions.balanceOf(acc_address).call()\nprint(f\"{name} [{symbol}] NFTs in Auctions: {kitties_auctions}\")\n\npregnant_kitties = ck_contract.functions.pregnantKitties().call()\nprint(f\"{name} [{symbol}] NFTs Pregnants: {pregnant_kitties}\")\n\n# Using the Transfer Event ABI to get info about transferred Kitties.\ntx_event_abi = {\n    'anonymous': False,\n    'inputs': [\n        {'indexed': False, 'name': 'from', 'type': 'address'},\n        {'indexed': False, 'name': 'to', 'type': 'address'},\n        {'indexed': False, 'name': 'tokenId', 'type': 'uint256'}],\n    'name': 'Transfer',\n    'type': 'event'\n}\n\n# We need the event's signature to filter the logs\nevent_signature = w3.sha3(text=\"Transfer(address,address,uint256)\").hex()\n\nlogs = w3.eth.getLogs({\n    \"fromBlock\": w3.eth.blockNumber - 120,\n    \"address\": w3.toChecksumAddress(ck_token_addr),\n    \"topics\": [event_signature]\n})\n\n# Notes:\n#   - 120 blocks is the max range for CloudFlare Provider\n#   - If you didn't find any Transfer event you can also try to get a tokenId at:\n#       https://etherscan.io/address/0x06012c8cf97BEaD5deAe237070F9587f8E7A266d#events\n#       Click to expand the event's logs and copy its \"tokenId\" argument\n\nrecent_tx = [get_event_data(w3.codec, tx_event_abi, log)[\"args\"] for log in logs]\n\nkitty_id = recent_tx[0]['tokenId'] # Paste the \"tokenId\" here from the link above\nis_pregnant = ck_contract.functions.isPregnant(kitty_id).call()\nprint(f\"{name} [{symbol}] NFTs {kitty_id} is pregnant: {is_pregnant}\")\n")),(0,r.kt)("p",null,"CryptoKitties Contract has some interesting Events other than the Standard ones."),(0,r.kt)("p",null,"Let's check two of them, ",(0,r.kt)("inlineCode",{parentName:"p"},"Pregnant")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Birth"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Using the Pregnant and Birth Events ABI to get info about new Kitties.\nck_extra_events_abi = [\n    {\n        'anonymous': False,\n        'inputs': [\n            {'indexed': False, 'name': 'owner', 'type': 'address'},\n            {'indexed': False, 'name': 'matronId', 'type': 'uint256'},\n            {'indexed': False, 'name': 'sireId', 'type': 'uint256'},\n            {'indexed': False, 'name': 'cooldownEndBlock', 'type': 'uint256'}],\n        'name': 'Pregnant',\n        'type': 'event'\n    },\n    {\n        'anonymous': False,\n        'inputs': [\n            {'indexed': False, 'name': 'owner', 'type': 'address'},\n            {'indexed': False, 'name': 'kittyId', 'type': 'uint256'},\n            {'indexed': False, 'name': 'matronId', 'type': 'uint256'},\n            {'indexed': False, 'name': 'sireId', 'type': 'uint256'},\n            {'indexed': False, 'name': 'genes', 'type': 'uint256'}],\n        'name': 'Birth',\n        'type': 'event'\n    }]\n\n# We need the event's signature to filter the logs\nck_event_signatures = [\n    w3.sha3(text=\"Pregnant(address,uint256,uint256,uint256)\").hex(),\n    w3.sha3(text=\"Birth(address,uint256,uint256,uint256,uint256)\").hex(),\n]\n\n# Here is a Pregnant Event:\n# - https://testnet.numblock.org/tx/0xc97eb514a41004acc447ac9d0d6a27ea6da305ac8b877dff37e49db42e1f8cef#eventlog\npregnant_logs = w3.eth.getLogs({\n    \"fromBlock\": w3.eth.blockNumber - 120,\n    \"address\": w3.toChecksumAddress(ck_token_addr),\n    \"topics\": [ck_event_signatures[0]]\n})\n\nrecent_pregnants = [get_event_data(w3.codec, ck_extra_events_abi[0], log)[\"args\"] for log in pregnant_logs]\n\n# Here is a Birth Event:\n# - https://testnet.numblock.org/tx/0x3978028e08a25bb4c44f7877eb3573b9644309c044bf087e335397f16356340a\nbirth_logs = w3.eth.getLogs({\n    \"fromBlock\": w3.eth.blockNumber - 120,\n    \"address\": w3.toChecksumAddress(ck_token_addr),\n    \"topics\": [ck_event_signatures[1]]\n})\n\nrecent_births = [get_event_data(w3.codec, ck_extra_events_abi[1], log)[\"args\"] for log in birth_logs]\n")),(0,r.kt)("h2",{id:"popular-nfts"},"Popular NFTs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://etherscan.io/tokens-nft"},"Etherscan NFT Tracker")," list the top NFT on NumBlock by transfers volume."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cryptokitties.co/"},"CryptoKitties")," is a game centered around breedable, collectible, and oh-so-adorable\ncreatures we call CryptoKitties."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://sorare.com/"},"Sorare")," is a global fantasy football game where you can collect limited editions collectibles,\nmanage your teams and compete to earn prizes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ens.domains/"},"The Ethereum Name Service (ENS)")," offers a secure & decentralised way to address resources both\non and off the blockchain using simple, human-readable names."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://poap.xyz"},"POAP")," delivers free NFTs to people who attend events or complete specific actions. POAPs are free to create and distribute."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://unstoppabledomains.com/"},"Unstoppable Domains")," is a San Francisco-based company building domains on\nblockchains. Blockchain domains replace cryptocurrency addresses with human-readable names and can be used to enable\ncensorship-resistant websites."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://godsunchained.com/"},"Gods Unchained Cards")," is a TCG on the Ethereum blockchain that uses NFT's to bring real ownership\nto in-game assets."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://boredapeyachtclub.com"},"Bored Ape Yacht Club")," is a collection of 10,000 unique NFTs, which, as well as being a provably-rare piece of art, acts as a membership token to the club, providing member perks and benefits that increase over time as a result of community efforts.")),(0,r.kt)("h2",{id:"further-reading"},"Further reading"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/3.x/erc721"},"OpenZeppelin - NRC-721 Docs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol"},"OpenZeppelin - NRC-721 Implementation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.alchemy.com/alchemy/enhanced-apis/nft-api"},"Alchemy NFT API"),"---\ntitle: NRC-721 (NFTs)\ndescription: example\nlang: en")),(0,r.kt)("hr",null))}c.isMDXComponent=!0}}]);