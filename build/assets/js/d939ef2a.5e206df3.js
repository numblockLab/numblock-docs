"use strict";(self.webpackChunknumblock_docs=self.webpackChunknumblock_docs||[]).push([[7093],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>m});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=l.createContext({}),s=function(e){var t=l.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},i=function(e){var t=s(e.components);return l.createElement(u.Provider,{value:t},e.children)},b="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,u=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),b=s(a),p=n,m=b["".concat(u,".").concat(p)]||b[p]||d[p]||r;return a?l.createElement(m,c(c({ref:t},i),{},{components:a})):l.createElement(m,c({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,c=new Array(r);c[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[b]="string"==typeof e?e:n,c[1]=o;for(var s=2;s<r;s++)c[s]=a[s];return l.createElement.apply(null,c)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>c});var l=a(7294),n=a(6010);const r="tabItem_Ymn6";function c(e){let{children:t,hidden:a,className:c}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(r,c),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>p});var l=a(7462),n=a(7294),r=a(6010),c=a(2389),o=a(7392),u=a(7094),s=a(2466);const i="tabList__CuJ",b="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:c,values:d,groupId:p,className:m}=e,f=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=d??f.map((e=>{let{props:{value:t,label:a,attributes:l}}=e;return{value:t,label:a,attributes:l}})),h=(0,o.l)(k,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===c?c:c??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,u.U)(),[T,v]=(0,n.useState)(g),j=[],{blockElementScrollPositionUntilNextRender:_}=(0,s.o5)();if(null!=p){const e=y[p];null!=e&&e!==T&&k.some((t=>t.value===e))&&v(e)}const B=e=>{const t=e.currentTarget,a=j.indexOf(t),l=k[a].value;l!==T&&(_(t),v(l),null!=p&&N(p,String(l)))},O=e=>{let t=null;switch(e.key){case"Enter":B(e);break;case"ArrowRight":{const a=j.indexOf(e.currentTarget)+1;t=j[a]??j[0];break}case"ArrowLeft":{const a=j.indexOf(e.currentTarget)-1;t=j[a]??j[j.length-1];break}}t?.focus()};return n.createElement("div",{className:(0,r.Z)("tabs-container",i)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},m)},k.map((e=>{let{value:t,label:a,attributes:c}=e;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>j.push(e),onKeyDown:O,onClick:B},c,{className:(0,r.Z)("tabs__item",b,c?.className,{"tabs__item--active":T===t})}),a??t)}))),t?(0,n.cloneElement)(f.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function p(e){const t=(0,c.Z)();return n.createElement(d,(0,l.Z)({key:String(t)},e))}},7758:(e,t,a)=>{a.r(t),a.d(t,{JsonRpcTerminal:()=>b,assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>u,toc:()=>i});var l=a(7462),n=a(7294),r=a(3905);a(5488),a(5162);const c={id:"json-rpc-debug",title:"Debug",description:"List of Debug JSON RPC commands for NumBlock.",keywords:["docs","json","rpc","commands"]},o=void 0,u={unversionedId:"developers/api/json-rpc-debug",id:"developers/api/json-rpc-debug",title:"Debug",description:"List of Debug JSON RPC commands for NumBlock.",source:"@site/docs/developers/api/json-rpc-debug.md",sourceDirName:"developers/api",slug:"/developers/api/json-rpc-debug",permalink:"/docs/developers/api/json-rpc-debug",draft:!1,tags:[],version:"current",frontMatter:{id:"json-rpc-debug",title:"Debug",description:"List of Debug JSON RPC commands for NumBlock.",keywords:["docs","json","rpc","commands"]},sidebar:"develop",previous:{title:"TxPool",permalink:"/docs/developers/api/json-rpc-txpool"},next:{title:"Interacting with NumBlock",permalink:"/docs/developers/interact"}},s={},i=[{value:"debug_traceBlockByNumber",id:"debug_traceblockbynumber",level:2},{value:"debug_traceBlockByHash",id:"debug_traceblockbyhash",level:2},{value:"debug_traceBlock",id:"debug_traceblock",level:2},{value:"debug_traceTransaction",id:"debug_tracetransaction",level:2},{value:"debug_traceCall",id:"debug_tracecall",level:2}],b=e=>{const[t,a]=(0,n.useState)(""),{method:l,params:c,network:o}=e;return(0,r.kt)("div",null,(0,r.kt)("div",null,""!=t?(0,r.kt)("pre",{className:"json_rpc_terminal"},t):null),(0,r.kt)("div",null,""==t?(0,r.kt)("button",{className:"json_rpc_terminal_button",onClick:()=>{fetch(o,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",method:l,params:c,id:1})}).then((e=>e.json())).then((e=>{a(JSON.stringify(e))}))}},"Run command"):(0,r.kt)("button",{className:"json_rpc_terminal_button",onClick:()=>{a("")}},"Clear Terminal")))},d={toc:i,JsonRpcTerminal:b};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"debug_traceblockbynumber"},"debug_traceBlockByNumber"),(0,r.kt)("p",null,"Executes all transactions in the block specified by number with a tracer and returns the tracing result."),(0,r.kt)("hr",null),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"QUANTITY|TAG "),' - integer of a block number, or the string "latest"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," Object ")," - The tracer options:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  enableMemory: Boolean ")," - (optional, default: false) The flag indicating enabling memory capture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  disableStack: Boolean ")," - (optional, default: false) The flag indicating disabling stack capture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  disableStorage: Boolean ")," - (optional, default: false) The flag indicating disabling storage capture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  enableReturnData: Boolean ")," - (optional, default: false) The flag indicating enabling return data capture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  timeOut: String "),' - (optional, default: "5s") The timeout for cancellation of execution.')))),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Returns:")),(0,r.kt)("b",null," Array ")," - Array of trace objects with the following fields:",(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," failed: Boolean ")," - the tx is successful or not"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," gas: QUANTITY ")," - the total consumed gas in the tx"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," returnValue: DATA ")," - the return value of the executed contract call"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," structLogs: Array ")," - the trace result of each step with the following fields:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," pc: QUANTITY ")," - the current index in bytecode"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," op: String ")," - the name of current executing operation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," gas: QUANTITY ")," - the available gas \xdfin the execution"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," gasCost: QUANTITY ")," - the gas cost of the operation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," depth: QUANTITY ")," - the number of levels of calling functions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," error: String ")," - the error of the execution"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," stack: Array ")," - array of values in the current stack"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," memory: Array ")," - array of values in the current memory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," storage: Object ")," - mapping of the current storage"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," refund: QUANTITY ")," - the total of current refund value")))),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Example:")),(0,r.kt)("p",null,"Run the command and see live results from our testnet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"debug_traceBlockByNumber","params":["latest"],"id":1}\'\n')),(0,r.kt)(b,{method:"debug_traceBlockByNumber",params:["latest"],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,r.kt)("h2",{id:"debug_traceblockbyhash"},"debug_traceBlockByHash"),(0,r.kt)("p",null,"Executes all transactions in the block specified by block hash with a tracer and returns the tracing result."),(0,r.kt)("hr",null),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," DATA , 32 Bytes ")," - Hash of a block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," Object ")," - The tracer options. See debug_traceBlockByNumber for more details.")),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Returns:")),(0,r.kt)("b",null," Array ")," - Array of trace objects. See debug_traceBlockByNumber for more details.",(0,r.kt)("h4",null,(0,r.kt)("i",null,"Example:")),(0,r.kt)("p",null,"Run the command and see live results from our testnet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"debug_traceBlockByHash","params":["0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae"],"id":1}\'\n')),(0,r.kt)(b,{method:"debug_traceBlockByHash",params:["0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae"],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,r.kt)("h2",{id:"debug_traceblock"},"debug_traceBlock"),(0,r.kt)("p",null,"Executes all transactions in the block given from the first argument with a tracer and returns the tracing result."),(0,r.kt)("hr",null),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," DATA ")," - RLP Encoded block bytes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," Object ")," - The tracer options. See debug_traceBlockByNumber for more details.")),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Returns:")),(0,r.kt)("b",null," Array ")," - Array of trace objects. See debug_traceBlockByNumber for more details.",(0,r.kt)("h4",null,(0,r.kt)("i",null,"Example:")),(0,r.kt)("p",null,"Run the command and see live results from our testnet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"debug_traceBlock","params":["0xf9...."],"id":1}\'\n')),(0,r.kt)(b,{method:"debug_traceBlockByHash",params:["0xf90452f9044da0f45471def449d6aa6e5a97fea02f61f9aebf4680752e8ff8de7f7ea682465e50a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a025c306dc776ac3491c1ac8078801102f1e892404b9e2f875c899d4191c30148ea056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bc5260b902530000000000000000000000000000000000000000000000000000000000000000f90230f90120f84694fcd402c6b0f888a5b0f81bf2015071aab505c904b0b91448357d833f664a3aa0de327fb4c1b25773c5a843eaa21f82a686d6b4eba2024fc13c57a19d559afb4bc52d74989ff84694f662cca2cf220cc4051c1e012cb1e9f4a97d4362b0a33a34478e4cddaf7078a572fd15d5aece27577ab4e7a82569ef3a7fd405f1fbce973be563e72e0b68a97a229f0716fff846942ef1ef27b6a5e4c74a55bdfca1acc826c1b95cc4b0acad4a1266922002fb0c7b8fb84fc89b395a5b5976dfb69f6224accd05e9e7aea19ef2813b6bb93926c6ba51a855db50f84694805f962108cfc5da6af2234ac880c2e3d31db3bab092428ba10e487ace3918f21bd0c5a07c1b1399ffee715c77c2e12f44227a9d75cfd942407746b3c88210c5a19ccb2759b84160e095670d6620b76f63421e341672cded71e5b1bb5893fed9ebbe2c3f536cd26884616e56353f159f10efe0761197d0c092bb95d7b5770b8a128b2ab761d5dc01f86307b86097f5a7986abf6d25407ba311242d71d3f2138fbb5b609727744b27806057dd67bb3f7c52ef449583e40a51285b18eab403ea1f593150296ebab96df8e33cc5f149f70e2a12a441d94bf7832d69f193ef49470c8883c352e92fb6fd5e7032e0c2f8630bb860825cc72155475fd880a6b78e696d19eecfc0912ca9b625e0837cd906a00a9423d254d02e1b2a4c82a6fffd2b18261f320fb3a150097384447991a5545d0b005f4d353fbf5862a1beaabefe827f85548296b2b71e946707e42240b6bdb42eddc4a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000c0c0"],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,r.kt)("h2",{id:"debug_tracetransaction"},"debug_traceTransaction"),(0,r.kt)("p",null,"Executes the transaction specified by transaction hash with a tracer and returns the tracing result."),(0,r.kt)("hr",null),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," DATA , 32 Bytes ")," - Hash of a transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," Object ")," - The tracer options. See debug_traceBlockByNumber for more details.")),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Returns:")),(0,r.kt)("b",null," Object ")," - Trace object. See debug_traceBlockByNumber for more details.",(0,r.kt)("h4",null,(0,r.kt)("i",null,"Example:")),(0,r.kt)("p",null,"Run the command and see live results from our testnet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"debug_traceTransaction","params":["0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae"],"id":1}\'\n')),(0,r.kt)(b,{method:"debug_traceTransaction",params:["0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae"],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}),(0,r.kt)("h2",{id:"debug_tracecall"},"debug_traceCall"),(0,r.kt)("p",null,"Executes a new message call with a tracer and returns the tracing result."),(0,r.kt)("hr",null),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," Object "),"  - The transaction call object",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  from: DATA, 20 Bytes ")," - (optional) The address the transaction is sent from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  to: DATA, 20 Bytes ")," - The address the transaction is directed to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  gas: QUANTITY ")," - (optional) Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  gasPrice: QUANTITY ")," - (optional) Integer of the gasPrice used for each paid gas"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  value: QUANTITY ")," - (optional) Integer of the value sent with this transaction"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null,"  data: DATA ")," - (optional) Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI in the Solidity documentation"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," QUANTITY|TAG "),' - integer block number, or the string "latest"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("b",null," Object ")," - The tracer options. See debug_traceBlockByNumber for more details.")),(0,r.kt)("h4",null,(0,r.kt)("i",null,"Returns:")),(0,r.kt)("b",null," Object ")," - Trace object. See debug_traceBlockByNumber for more details.",(0,r.kt)("h4",null,(0,r.kt)("i",null,"Example:")),(0,r.kt)("p",null,"Run the command and see live results from our testnet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl  https://rpc-testnet.numblock.org -X POST -H "Content-Type: application/json" --data \'{"jsonrpc":"2.0","method":"debug_traceCall","params":[{"to": "0x1234", "data": "0x1234"}, "latest", {}],"id":1}\'\n')),(0,r.kt)(b,{method:"debug_traceTransaction",params:[{},"latest",{}],network:"https://rpc-testnet.numblock.org",mdxType:"JsonRpcTerminal"}))}p.isMDXComponent=!0}}]);